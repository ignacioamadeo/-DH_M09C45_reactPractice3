{"ast":null,"code":"import Genre from './Genre';\nimport React, { Component } from 'react';\n/*Hacer que el componente /components/GenresInDb.js sea ahora un componente stateful para poder \r\nconectarse con nuestro back-end a través de una API, la cual ya está armada y su endpoint es: \r\n/api/genres. Esta debe exponer de forma dinámica los géneros de las películas: */\n\nlet genres = [{\n  genre: 'Acción'\n}, {\n  genre: 'Animación'\n}, {\n  genre: 'Aventura'\n}, {\n  genre: 'Ciencia Ficción'\n}, {\n  genre: 'Comedia'\n}, {\n  genre: 'Documental'\n}, {\n  genre: 'Drama'\n}, {\n  genre: 'Fantasia'\n}, {\n  genre: 'Infantiles'\n}, {\n  genre: 'Musical'\n}];\n\nclass GenresInDb extends Component {\n  constructor() {\n    super(props);\n    this.state = {\n      genresList: []\n    };\n  }\n  /*Ahora debemos establecer la conexión con nuestro back-end con React, \r\n  podemos usar cualquier biblioteca AJAX, recomendamos utilizar\r\n  windows.fetch. Esto lo debemos programar en el momento en que el componente se monte, \r\n  valiéndonos del método componentDidMount(): */\n\n\n  componentDidMount() {\n    fetch('/api/genres').then(respuesta => {\n      return respuesta.json();\n    }).then(genres => {\n      //console.log(genres)\n      this.setState({\n        genresList: genres.data\n      });\n    }).catch(error => console.log(error));\n  }\n\n}\n\nexport default GenresInDb;","map":{"version":3,"sources":["/Users/ignacioamadeo/Dropbox/DigitalHouse/modulo09/m09c45vivo/c45react/dashboard/src/components/GenresInDb.js"],"names":["Genre","React","Component","genres","genre","GenresInDb","constructor","props","state","genresList","componentDidMount","fetch","then","respuesta","json","setState","data","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAG,CACT;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADS,EAET;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFS,EAGT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHS,EAIT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJS,EAKT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALS,EAMT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CANS,EAOT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAPS,EAQT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CARS,EAST;AAAEA,EAAAA,KAAK,EAAE;AAAT,CATS,EAUT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAVS,CAAb;;AAaA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,GAAG;AACV,UAAMC,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;AAED;AACJ;AACA;AACA;;;AAEIC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACUC,SAAS,IAAI;AACf,aAAOA,SAAS,CAACC,IAAV,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUT,MAAM,IAAI;AACZ;AACA,WAAKY,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEN,MAAM,CAACa;AAArB,OAAd;AACH,KAPL,EAQKC,KARL,CAQWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARpB;AASH;;AAvB8B;;AA2BnC,eAAeb,UAAf","sourcesContent":["import Genre from './Genre';\r\nimport React, { Component } from 'react';\r\n\r\n/*Hacer que el componente /components/GenresInDb.js sea ahora un componente stateful para poder \r\nconectarse con nuestro back-end a través de una API, la cual ya está armada y su endpoint es: \r\n/api/genres. Esta debe exponer de forma dinámica los géneros de las películas: */\r\n\r\nlet genres = [\r\n    { genre: 'Acción' },\r\n    { genre: 'Animación' },\r\n    { genre: 'Aventura' },\r\n    { genre: 'Ciencia Ficción' },\r\n    { genre: 'Comedia' },\r\n    { genre: 'Documental' },\r\n    { genre: 'Drama' },\r\n    { genre: 'Fantasia' },\r\n    { genre: 'Infantiles' },\r\n    { genre: 'Musical' }\r\n]\r\n\r\nclass GenresInDb extends Component {\r\n    constructor() {\r\n        super(props);\r\n        this.state = {\r\n            genresList: []\r\n        }\r\n    }\r\n\r\n    /*Ahora debemos establecer la conexión con nuestro back-end con React, \r\n    podemos usar cualquier biblioteca AJAX, recomendamos utilizar\r\n    windows.fetch. Esto lo debemos programar en el momento en que el componente se monte, \r\n    valiéndonos del método componentDidMount(): */\r\n\r\n    componentDidMount() {\r\n        fetch('/api/genres')\r\n            .then(respuesta => {\r\n                return respuesta.json()\r\n            })\r\n            .then(genres => {\r\n                //console.log(genres)\r\n                this.setState({ genresList: genres.data })\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n}\r\nexport default GenresInDb;"]},"metadata":{},"sourceType":"module"}